import {
  Avatar,
  Badge,
  Button,
  Card,
  Divider,
  Group,
  Modal,
  NumberInput,
  Select,
  Stack,
  Text,
  TextInput,
  Title,
} from '@mantine/core'
import { useForm } from '@mantine/form'
import { useStore } from '@nanostores/react'
import React from 'react'
import { apiClient } from '../api-client.js'
import { $user } from '../app.js'

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–ª–Ω–æ—Ç—ã –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const isProfileComplete = (user: any) => {
  if (!user) return false

  const requiredFields = [
    user.name,
    user.age,
    user.weight,
    user.height,
    user.gender,
    user.activityLevel,
    user.goal,
    user.dailyCalories,
  ]

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã
  return requiredFields.every((field) => field !== null && field !== undefined && field !== '')
}

interface UserProfileModalProps {
  opened: boolean
  onClose: () => void
}

const ACTIVITY_LEVELS = [
  { value: 'sedentary', label: '–°–∏–¥—è—á–∏–π –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏ (–º–∞–ª–æ –¥–≤–∏–∂–µ–Ω–∏—è)' },
  { value: 'lightly_active', label: '–õ–µ–≥–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (1-3 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é)' },
  { value: 'moderately_active', label: '–£–º–µ—Ä–µ–Ω–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (3-5 —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é)' },
  { value: 'very_active', label: '–í—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (6-7 —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é)' },
  { value: 'extremely_active', label: '–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (—Å–ø–æ—Ä—Ç—Å–º–µ–Ω)' },
]

const GOALS = [
  { value: 'lose_weight', label: '–ü–æ—Ö—É–¥–µ–Ω–∏–µ' },
  { value: 'maintain_weight', label: '–ü–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ –≤–µ—Å–∞' },
  { value: 'gain_weight', label: '–ù–∞–±–æ—Ä –≤–µ—Å–∞' },
]

const GENDERS = [
  { value: 'male', label: '–ú—É–∂—Å–∫–æ–π' },
  { value: 'female', label: '–ñ–µ–Ω—Å–∫–∏–π' },
  { value: 'other', label: '–î—Ä—É–≥–æ–π' },
]

export function UserProfileModal({ opened, onClose }: UserProfileModalProps) {
  const user = useStore($user)
  const [loading, setLoading] = React.useState(false)

  const form = useForm({
    initialValues: {
      name: user?.name || '',
      height: user?.height || null,
      weight: user?.weight || null,
      targetWeight: user?.targetWeight || null,
      dailyCalories: user?.dailyCalories || null,
      age: user?.age || null,
      gender: user?.gender || '',
      activityLevel: user?.activityLevel || '',
      goal: user?.goal || '',
    },
    validate: {
      height: (value: number | null) =>
        value && (value < 100 || value > 250) ? '–†–æ—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 100 –¥–æ 250 —Å–º' : null,
      weight: (value: number | null) =>
        value && (value < 30 || value > 300) ? '–í–µ—Å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 30 –¥–æ 300 –∫–≥' : null,
      targetWeight: (value: number | null) =>
        value && (value < 30 || value > 300) ? '–¶–µ–ª–µ–≤–æ–π –≤–µ—Å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 30 –¥–æ 300 –∫–≥' : null,
      dailyCalories: (value: number | null) =>
        value && (value < 800 || value > 5000) ? '–ö–∞–ª–æ—Ä–∏–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ—Ç 800 –¥–æ 5000' : null,
      age: (value: number | null) =>
        value && (value < 10 || value > 120) ? '–í–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 10 –¥–æ 120 –ª–µ—Ç' : null,
    },
  })

  React.useEffect(() => {
    if (user) {
      form.setValues({
        name: user.name || '',
        height: user.height || null,
        weight: user.weight || null,
        targetWeight: user.targetWeight || null,
        dailyCalories: user.dailyCalories || null,
        age: user.age || null,
        gender: user.gender || '',
        activityLevel: user.activityLevel || '',
        goal: user.goal || '',
      })
    }
  }, [user])

  const handleSubmit = async (values: typeof form.values) => {
    setLoading(true)
    try {
      const updatedUser = await apiClient.updateUserProfile({
        name: values.name || undefined,
        height: values.height || undefined,
        weight: values.weight || undefined,
        targetWeight: values.targetWeight || undefined,
        dailyCalories: values.dailyCalories || undefined,
        age: values.age || undefined,
        gender: values.gender || undefined,
        activityLevel: values.activityLevel || undefined,
        goal: values.goal || undefined,
      })

      // –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      $user.set(updatedUser)

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—Ç–∞–ª –ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª–Ω—ã–º
      if (isProfileComplete(updatedUser)) {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è
        alert(
          'üéâ –û—Ç–ª–∏—á–Ω–æ! –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –∑–∞–ø–æ–ª–Ω–µ–Ω. –¢–µ–ø–µ—Ä—å –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø–∏—Ç–∞–Ω–∏—é!'
        )
      }

      onClose()
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è:', error)
    } finally {
      setLoading(false)
    }
  }

  const calculateBMI = () => {
    const weight = form.values.weight
    const height = form.values.height
    if (weight && height) {
      const heightInMeters = height / 100
      return (weight / (heightInMeters * heightInMeters)).toFixed(1)
    }
    return null
  }

  const getBMICategory = (bmi: number) => {
    if (bmi < 18.5) return { label: '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π –≤–µ—Å', color: 'blue' }
    if (bmi < 25) return { label: '–ù–æ—Ä–º–∞–ª—å–Ω—ã–π –≤–µ—Å', color: 'green' }
    if (bmi < 30) return { label: '–ò–∑–±—ã—Ç–æ—á–Ω—ã–π –≤–µ—Å', color: 'yellow' }
    return { label: '–û–∂–∏—Ä–µ–Ω–∏–µ', color: 'red' }
  }

  const bmi = calculateBMI()

  return (
    <Modal opened={opened} onClose={onClose} title="–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" size="lg">
      <form onSubmit={form.onSubmit(handleSubmit)}>
        <Stack gap="lg">
          {/* –ê–≤–∞—Ç–∞—Ä –∏ –æ—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
          <Card withBorder p="md">
            <Group>
              <Avatar src={user?.picture || null} size="xl" radius="xl" alt={user?.name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'} />
              <div>
                <Title order={4}>{user?.name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}</Title>
                <Text size="sm" c="dimmed">
                  {user?.email}
                </Text>
              </div>
            </Group>
          </Card>

          {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
          <Card withBorder p="md">
            <Title order={5} mb="md">
              –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
            </Title>
            <Stack gap="md">
              <TextInput label="–ò–º—è" placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è" {...form.getInputProps('name')} />

              <Group grow>
                <NumberInput label="–í–æ–∑—Ä–∞—Å—Ç (–ª–µ—Ç)" placeholder="25" min={10} max={120} {...form.getInputProps('age')} />
                <Select label="–ü–æ–ª" placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª" data={GENDERS} {...form.getInputProps('gender')} />
              </Group>
            </Stack>
          </Card>

          {/* –§–∏–∑–∏—á–µ—Å–∫–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã */}
          <Card withBorder p="md">
            <Title order={5} mb="md">
              –§–∏–∑–∏—á–µ—Å–∫–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
            </Title>
            <Stack gap="md">
              <Group grow>
                <NumberInput
                  label="–†–æ—Å—Ç (—Å–º)"
                  placeholder="175"
                  min={100}
                  max={250}
                  {...form.getInputProps('height')}
                />
                <NumberInput
                  label="–¢–µ–∫—É—â–∏–π –≤–µ—Å (–∫–≥)"
                  placeholder="70"
                  min={30}
                  max={300}
                  decimalScale={1}
                  {...form.getInputProps('weight')}
                />
              </Group>

              <NumberInput
                label="–ñ–µ–ª–∞–µ–º—ã–π –≤–µ—Å (–∫–≥)"
                placeholder="65"
                min={30}
                max={300}
                decimalScale={1}
                {...form.getInputProps('targetWeight')}
              />

              {/* BMI –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
              {bmi && (
                <Card withBorder p="sm" bg="gray.0">
                  <Group justify="space-between">
                    <Text size="sm" fw={500}>
                      –ò–Ω–¥–µ–∫—Å –º–∞—Å—Å—ã —Ç–µ–ª–∞ (–ò–ú–¢):
                    </Text>
                    <Badge color={getBMICategory(parseFloat(bmi)).color} variant="light">
                      {bmi} - {getBMICategory(parseFloat(bmi)).label}
                    </Badge>
                  </Group>
                </Card>
              )}
            </Stack>
          </Card>

          {/* –¶–µ–ª–∏ –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å */}
          <Card withBorder p="md">
            <Title order={5} mb="md">
              –¶–µ–ª–∏ –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
            </Title>
            <Stack gap="md">
              <Select
                label="–£—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏"
                placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏"
                data={ACTIVITY_LEVELS}
                {...form.getInputProps('activityLevel')}
              />

              <Select label="–¶–µ–ª—å" placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ü–µ–ª—å" data={GOALS} {...form.getInputProps('goal')} />

              <NumberInput
                label="–¶–µ–ª—å –ø–æ –∫–∞–ª–æ—Ä–∏—è–º –Ω–∞ –¥–µ–Ω—å"
                placeholder="2000"
                min={800}
                max={5000}
                {...form.getInputProps('dailyCalories')}
              />
            </Stack>
          </Card>

          {/* –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∫–∞–ª–æ—Ä–∏—è–º */}
          {form.values.age &&
            form.values.weight &&
            form.values.height &&
            form.values.gender &&
            form.values.activityLevel && (
              <Card withBorder p="md" bg="blue.0">
                <Title order={6} mb="sm" c="blue">
                  üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
                </Title>
                <Text size="sm">
                  –ù–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–ª–æ—Ä–∏–π: ~
                  {(() => {
                    // –ü—Ä–æ—Å—Ç–∞—è —Ñ–æ—Ä–º—É–ª–∞ —Ä–∞—Å—á–µ—Ç–∞ BMR (–±–∞–∑–æ–≤—ã–π –æ–±–º–µ–Ω –≤–µ—â–µ—Å—Ç–≤)
                    let bmr = 0
                    if (form.values.gender === 'male') {
                      bmr =
                        88.362 +
                        13.397 * (form.values.weight || 0) +
                        4.799 * (form.values.height || 0) -
                        5.677 * (form.values.age || 0)
                    } else {
                      bmr =
                        447.593 +
                        9.247 * (form.values.weight || 0) +
                        3.098 * (form.values.height || 0) -
                        4.33 * (form.values.age || 0)
                    }

                    // –ú–Ω–æ–∂–∏—Ç–µ–ª–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
                    const activityMultipliers = {
                      sedentary: 1.2,
                      lightly_active: 1.375,
                      moderately_active: 1.55,
                      very_active: 1.725,
                      extremely_active: 1.9,
                    }

                    const tdee =
                      bmr * (activityMultipliers[form.values.activityLevel as keyof typeof activityMultipliers] || 1.2)

                    // –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —Ü–µ–ª–∏
                    let recommended = tdee
                    if (form.values.goal === 'lose_weight') {
                      recommended = tdee - 500 // –î–µ—Ñ–∏—Ü–∏—Ç 500 –∫–∞–ª–æ—Ä–∏–π –¥–ª—è –ø–æ—Ö—É–¥–µ–Ω–∏—è
                    } else if (form.values.goal === 'gain_weight') {
                      recommended = tdee + 300 // –ü—Ä–æ—Ñ–∏—Ü–∏—Ç 300 –∫–∞–ª–æ—Ä–∏–π –¥–ª—è –Ω–∞–±–æ—Ä–∞ –≤–µ—Å–∞
                    }

                    return Math.round(recommended)
                  })()}{' '}
                  –∫–∫–∞–ª
                </Text>
              </Card>
            )}

          <Divider />

          <Group justify="flex-end" gap="xs">
            <Button variant="light" onClick={onClose} disabled={loading}>
              –û—Ç–º–µ–Ω–∞
            </Button>
            <Button type="submit" loading={loading}>
              –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
            </Button>
          </Group>
        </Stack>
      </form>
    </Modal>
  )
}
