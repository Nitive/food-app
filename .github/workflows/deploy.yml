name: Deploy to Production

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: '10.12.1'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate Prisma Client
        run: pnpm prisma generate

      - name: Run type check
        run: pnpm run types

      - name: Run linting
        run: pnpm run lint:check

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -t food-app:${{ github.sha }} .
          docker save food-app:${{ github.sha }} | gzip > food-app.tar.gz

      - name: Create deployment package
        run: |
          # –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤ —Å Docker –æ–±—Ä–∞–∑–æ–º –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
          tar -czf deployment.tar.gz \
            food-app.tar.gz \
            docker-compose.yml \
            Caddyfile \
            .dockerignore

      - name: Upload deployment package
        uses: actions/upload-artifact@v4
        with:
          name: deployment-package
          path: deployment.tar.gz
          retention-days: 1

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            set -e

            echo "üöÄ Starting deployment..."

            # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            mkdir -p /opt/food-app
            cd /opt/food-app

            # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
            echo "üõë Stopping old containers..."
            docker-compose down || true

            # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–∑—ã
            echo "üßπ Cleaning old images..."
            docker system prune -f

      - name: Download and extract deployment package
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          source: 'deployment.tar.gz'
          target: '/opt/food-app'
          strip_components: 0

      - name: Deploy application
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            set -e

            cd /opt/food-app

            echo "üì¶ Extracting deployment package..."
            tar -xzf deployment.tar.gz

            echo "üê≥ Loading Docker image..."
            docker load < food-app.tar.gz

            # –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª
            echo "üìù Creating .env file..."
            cat > .env << EOF
            # –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
            DATABASE_URL=postgresql://food_user:food_password@postgres:5432/food_app

            # Google OAuth
            GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
            GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}

            # JWT —Å–µ–∫—Ä–µ—Ç
            JWT_SECRET=${{ secrets.JWT_SECRET }}

            # –û–∫—Ä—É–∂–µ–Ω–∏–µ
            NODE_ENV=production
            PORT=3000
            EOF

            echo "üî® Starting containers..."
            docker-compose up -d

            echo "‚è≥ Waiting for services to start..."
            sleep 30

            echo "üóÑÔ∏è Running database migrations..."
            docker-compose exec -T app npx prisma migrate deploy

            echo "üå± Seeding database..."
            docker-compose exec -T app npx prisma db seed || true

            echo "‚úÖ Checking service status..."
            docker-compose ps

            echo "üîç Checking logs..."
            docker-compose logs --tail=20

            # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
            rm -f deployment.tar.gz food-app.tar.gz

      - name: Health check
        run: |
          echo "üè• Performing health check..."
          sleep 10
          curl -f https://${{ secrets.DOMAIN }} || exit 1

      - name: Notify deployment success
        if: success()
        run: |
          echo "üéâ Deployment completed successfully!"
          echo "üåê Application is available at: https://${{ secrets.DOMAIN }}"

      - name: Notify deployment failure
        if: failure()
        run: |
          echo "‚ùå Deployment failed!"
          echo "Check the logs above for more details."
